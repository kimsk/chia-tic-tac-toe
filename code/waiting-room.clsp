; PLAYER_PH                     : Player Puzzle Hash (for Clawback)
; P1_PK                         : Player One PK
; P2_PK                         : Player Two PK
; P1_COIN_ID                    : P1 coin id, null if this is P1 coin
; RETURN_AMOUNT                 : Amount returned to player when clawback in mojos
; GAME_AMOUNT                   : Odd game amount in mojos
; launcher_coin_announcement    : Expected coin announcement from the launcher coin, null if Clawback

(mod (
        PLAYER_PH
        P1_PK
        P2_PK
        P1_COIN_ID
        RETURN_AMOUNT
        GAME_AMOUNT
        launcher_coin_announcement
    )
    (include condition_codes.clib)

    (defconstant SINGLETON_LAUNCHER_HASH 0xeff07522495060c066f66f32acc2a77e3a3e737aca8baea4d1a64ea4cdc13da9)
    (defconstant CLAWBACK_BLOCKS 100)


    (defun start-game (P1_PK P2_PK P1_COIN_ID GAME_AMOUNT launcher_coin_announcement)
        (if P1_COIN_ID
            (list
                ; P2 asserts a coin announcement from P1 coin
                ; We want to secure P2 spend without AGG_SIG_ME
                (list ASSERT_COIN_ANNOUNCEMENT (sha256 P1_COIN_ID launcher_coin_announcement))
            )
            (list
                ; P1 creates a launcher coin
                (list CREATE_COIN SINGLETON_LAUNCHER_HASH GAME_AMOUNT)
                ; P1 asserts a coin announcement from launcher coin
                (list ASSERT_COIN_ANNOUNCEMENT launcher_coin_announcement)
                ; P1 creates a coin annoucement for P2
                (list CREATE_COIN_ANNOUNCEMENT launcher_coin_announcement)
                ; P1 signs launcher_coin_announcement
                (list AGG_SIG_ME P1_PK launcher_coin_announcement)
            )
        )
    )

    (defun-inline clawback (PLAYER_PH RETURN_AMOUNT)
        (list 
            (list ASSERT_HEIGHT_RELATIVE CLAWBACK_BLOCKS) ; clawback condition valid after CLAWBACK_BLOCKS blocks have passed
            (list CREATE_COIN PLAYER_PH RETURN_AMOUNT) ; return mojos to player 
            (list 
                AGG_SIG_ME
                (if P1_COIN_ID
                    P2_PK
                    P1_PK
                )
                (sha256 PLAYER_PH RETURN_AMOUNT))
        )
    )

    ; if launcher_id is not null (not clawback)
    (if launcher_coin_announcement 
        (start-game
            P1_PK
            P2_PK
            P1_COIN_ID
            GAME_AMOUNT
            launcher_coin_announcement 
        )
        (clawback PLAYER_PH RETURN_AMOUNT)
    )
)